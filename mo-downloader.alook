{
  "match": 0,
  "info": "mo\u4e0b\u8f7d\u5668",
  "regex": "m.tribe-m.jp@@m.ex-m.jp@@m.ldh-m.jp@@m.ldhgirls-m.jp",
  "runat": 0,
  "version": "0.25",
  "author": "\u4e59\u919a",
  "name": "mo\u4e0b\u8f7d\u5668",
  "code": ""
}